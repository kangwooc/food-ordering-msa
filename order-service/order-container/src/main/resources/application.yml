spring.application.name: order-container
order-service:
  payment-request-topic-name: payment-request
  payment-response-topic-name: payment-response
  restaurant-approval-request-topic-name: restaurant-approval-request
  restaurant-approval-response-topic-name: restaurant-approval-response

spring:
  sql:
    init:
      mode: always
      schema-locations: classpath:init-schema.sql
  jpa:
    open-in-view: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
        hibernate:
          format_sql: true
          dialect: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
  datasource:
    driver-class-name: org.postgresql.Driver
    # writeBatchedInserts: 단일 트랜잭션 내에서 여러 insert 문을 배치로 실행하여 성능 향상
    # stringtype=unspecified: 문자열 매핑 문제 해결
    # UUID 타입을 문자열로 처리하는 데 도움
    url: jdbc:postgresql://localhost:5432/postgres?currentSchema=order&binaryTransfer=true&writeBatchedInserts=true&stringtype=unspecified
    username: postgres
    password: admin

kafka-config:
  bootstrap-servers: localhost:19092, localhost:29092, localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  num-of-partitions: 3
  replication-factor: 3
kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.StringSerializer
  value-serializer-class: com.github.avrokotlin.avro4k.kafka.confluent.GenericAvro4kKafkaSerializer
  compression-type: none
  acks: all
  batch-size: 16384
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5
kafka-consumer-config:
  key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value-deserializer: com.github.avrokotlin.avro4k.kafka.confluent.GenericAvro4kKafkaDeserializer
  payment-consumer-group-id: payment-topic-consumer
  restaurant-approval-consumer-group-id: restaurant-approval-topic-consumer
  customer-group-id: customer-topic-consumer
  auto-offset-reset: earliest
  specific-avro-reader-key: specific.avro.reader
  specific-avro-reader: true
  batch-listener: true
  auto-startup: true
  concurrency-level: 3
  session-timeout-ms: 10000
  heartbeat-interval-ms: 3000
  max-poll-interval-ms: 300000
  max-poll-records: 500
  max-partition-fetch-bytes-default: 1048576
  max-partition-fetch-bytes-boost-factor: 1
  poll-timeout-ms: 150

logging:
  level:
   com.food.ordering.service: DEBUG

server:
  port: 8181
